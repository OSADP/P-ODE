
package com.leidos.ode.data;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PodeWeatherinfo", isSet = false )
    public class PodeWeatherinfo implements IASN1PreparedElement {
            @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "sourceID", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private byte[] sourceID = null;
                
  @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "obsTypeID", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private byte[] obsTypeID = null;
                
  @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "sensorID", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private byte[] sensorID = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 60L 
		
	   )
	   
        @ASN1Element ( name = "sensorIndex", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private Integer sensorIndex = null;
                
  @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "platformID", isOptional =  false , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private byte[] platformID = null;
                
  @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "siteID", isOptional =  false , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private byte[] siteID = null;
                
  
        @ASN1Element ( name = "category", isOptional =  false , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private PodeCategory category = null;
                
  @ASN1OctetString( name = "" )
    
//            @ASN1SizeConstraint ( max = 4L )
        
        @ASN1Element ( name = "contribID", isOptional =  false , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private byte[] contribID = null;
                
  
    @ASN1String( name = "", 
        stringType = UniversalTag.UTF8String , isUCS = false )
    
        @ASN1Element ( name = "contributor", isOptional =  false , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private String contributor = null;
                
  
    @ASN1String( name = "", 
        stringType = UniversalTag.UTF8String , isUCS = false )
    
        @ASN1Element ( name = "platformCode", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private String platformCode = null;
                
  
        @ASN1Element ( name = "position", isOptional =  false , hasTag =  true, tag = 10 , hasDefaultValue =  false  )
    
	private Position3D position = null;
                
  
        @ASN1Element ( name = "weatherSenorData", isOptional =  false , hasTag =  true, tag = 11 , hasDefaultValue =  false  )
    
	private PodeWeatherData weatherSenorData = null;
                
  
        
        public byte[] getSourceID () {
            return this.sourceID;
        }

        

        public void setSourceID (byte[] value) {
            this.sourceID = value;
        }
        
  
        
        public byte[] getObsTypeID () {
            return this.obsTypeID;
        }

        

        public void setObsTypeID (byte[] value) {
            this.obsTypeID = value;
        }
        
  
        
        public byte[] getSensorID () {
            return this.sensorID;
        }

        

        public void setSensorID (byte[] value) {
            this.sensorID = value;
        }
        
  
        
        public Integer getSensorIndex () {
            return this.sensorIndex;
        }

        

        public void setSensorIndex (Integer value) {
            this.sensorIndex = value;
        }
        
  
        
        public byte[] getPlatformID () {
            return this.platformID;
        }

        

        public void setPlatformID (byte[] value) {
            this.platformID = value;
        }
        
  
        
        public byte[] getSiteID () {
            return this.siteID;
        }

        

        public void setSiteID (byte[] value) {
            this.siteID = value;
        }
        
  
        
        public PodeCategory getCategory () {
            return this.category;
        }

        

        public void setCategory (PodeCategory value) {
            this.category = value;
        }
        
  
        
        public byte[] getContribID () {
            return this.contribID;
        }

        

        public void setContribID (byte[] value) {
            this.contribID = value;
        }
        
  
        
        public String getContributor () {
            return this.contributor;
        }

        

        public void setContributor (String value) {
            this.contributor = value;
        }
        
  
        
        public String getPlatformCode () {
            return this.platformCode;
        }

        

        public void setPlatformCode (String value) {
            this.platformCode = value;
        }
        
  
        
        public Position3D getPosition () {
            return this.position;
        }

        

        public void setPosition (Position3D value) {
            this.position = value;
        }
        
  
        
        public PodeWeatherData getWeatherSenorData () {
            return this.weatherSenorData;
        }

        

        public void setWeatherSenorData (PodeWeatherData value) {
            this.weatherSenorData = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PodeWeatherinfo.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            