
package com.leidos.ode.data;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PodeWeatherData", isSet = false )
    public class PodeWeatherData implements IASN1PreparedElement {
            
        @ASN1Element ( name = "airTemp", isOptional =  true , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature airTemp = null;
                
  
        @ASN1Element ( name = "airPress", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private AmbientAirPressure airPress = null;
                
  
        @ASN1Element ( name = "dewPointTemp", isOptional =  true , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature dewPointTemp = null;
                
  
        @ASN1Element ( name = "maxTemp", isOptional =  true , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature maxTemp = null;
                
  
        @ASN1Element ( name = "minTemp", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature minTemp = null;
                
  
        @ASN1Element ( name = "relativeHumidty", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private Percentage relativeHumidty = null;
                
  
        @ASN1Element ( name = "precipYesNo", isOptional =  true , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private PrecipYesNo precipYesNo = null;
                
  
        @ASN1Element ( name = "precipSit", isOptional =  true , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private PrecipSituation precipSit = null;
                
  
        @ASN1Element ( name = "precipRate", isOptional =  true , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private PrecipRate precipRate = null;
                
  
        @ASN1Element ( name = "visibility", isOptional =  true , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private Distance visibility = null;
                
  
        @ASN1Element ( name = "visibilitySituation", isOptional =  true , hasTag =  true, tag = 10 , hasDefaultValue =  false  )
    
	private VisibilitySituation visibilitySituation = null;
                
  
        @ASN1Element ( name = "mobileFriction", isOptional =  true , hasTag =  true, tag = 11 , hasDefaultValue =  false  )
    
	private Percentage mobileFriction = null;
                
  
        @ASN1Element ( name = "surfaceStatus", isOptional =  true , hasTag =  true, tag = 12 , hasDefaultValue =  false  )
    
	private SurfaceStatus surfaceStatus = null;
                
  
        @ASN1Element ( name = "surfaceTemperature", isOptional =  true , hasTag =  true, tag = 13 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature surfaceTemperature = null;
                
  
        @ASN1Element ( name = "pavementTemperature", isOptional =  true , hasTag =  true, tag = 14 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature pavementTemperature = null;
                
  
        @ASN1Element ( name = "windSenAvSpeed", isOptional =  true , hasTag =  true, tag = 15 , hasDefaultValue =  false  )
    
	private Speed windSenAvSpeed = null;
                
  
        @ASN1Element ( name = "windSenAvDirection", isOptional =  true , hasTag =  true, tag = 16 , hasDefaultValue =  false  )
    
	private Heading windSenAvDirection = null;
                
  
        @ASN1Element ( name = "surfaceFreezePoint", isOptional =  true , hasTag =  true, tag = 17 , hasDefaultValue =  false  )
    
	private AmbientAirTemperature surfaceFreezePoint = null;
                
  
        @ASN1Element ( name = "surfaceBlackIceSignal", isOptional =  true , hasTag =  true, tag = 18 , hasDefaultValue =  false  )
    
	private SurfaceBlackIceSignal surfaceBlackIceSignal = null;
                
  
        
        public AmbientAirTemperature getAirTemp () {
            return this.airTemp;
        }

        
        public boolean isAirTempPresent () {
            return this.airTemp != null;
        }
        

        public void setAirTemp (AmbientAirTemperature value) {
            this.airTemp = value;
        }
        
  
        
        public AmbientAirPressure getAirPress () {
            return this.airPress;
        }

        
        public boolean isAirPressPresent () {
            return this.airPress != null;
        }
        

        public void setAirPress (AmbientAirPressure value) {
            this.airPress = value;
        }
        
  
        
        public AmbientAirTemperature getDewPointTemp () {
            return this.dewPointTemp;
        }

        
        public boolean isDewPointTempPresent () {
            return this.dewPointTemp != null;
        }
        

        public void setDewPointTemp (AmbientAirTemperature value) {
            this.dewPointTemp = value;
        }
        
  
        
        public AmbientAirTemperature getMaxTemp () {
            return this.maxTemp;
        }

        
        public boolean isMaxTempPresent () {
            return this.maxTemp != null;
        }
        

        public void setMaxTemp (AmbientAirTemperature value) {
            this.maxTemp = value;
        }
        
  
        
        public AmbientAirTemperature getMinTemp () {
            return this.minTemp;
        }

        
        public boolean isMinTempPresent () {
            return this.minTemp != null;
        }
        

        public void setMinTemp (AmbientAirTemperature value) {
            this.minTemp = value;
        }
        
  
        
        public Percentage getRelativeHumidty () {
            return this.relativeHumidty;
        }

        
        public boolean isRelativeHumidtyPresent () {
            return this.relativeHumidty != null;
        }
        

        public void setRelativeHumidty (Percentage value) {
            this.relativeHumidty = value;
        }
        
  
        
        public PrecipYesNo getPrecipYesNo () {
            return this.precipYesNo;
        }

        
        public boolean isPrecipYesNoPresent () {
            return this.precipYesNo != null;
        }
        

        public void setPrecipYesNo (PrecipYesNo value) {
            this.precipYesNo = value;
        }
        
  
        
        public PrecipSituation getPrecipSit () {
            return this.precipSit;
        }

        
        public boolean isPrecipSitPresent () {
            return this.precipSit != null;
        }
        

        public void setPrecipSit (PrecipSituation value) {
            this.precipSit = value;
        }
        
  
        
        public PrecipRate getPrecipRate () {
            return this.precipRate;
        }

        
        public boolean isPrecipRatePresent () {
            return this.precipRate != null;
        }
        

        public void setPrecipRate (PrecipRate value) {
            this.precipRate = value;
        }
        
  
        
        public Distance getVisibility () {
            return this.visibility;
        }

        
        public boolean isVisibilityPresent () {
            return this.visibility != null;
        }
        

        public void setVisibility (Distance value) {
            this.visibility = value;
        }
        
  
        
        public VisibilitySituation getVisibilitySituation () {
            return this.visibilitySituation;
        }

        
        public boolean isVisibilitySituationPresent () {
            return this.visibilitySituation != null;
        }
        

        public void setVisibilitySituation (VisibilitySituation value) {
            this.visibilitySituation = value;
        }
        
  
        
        public Percentage getMobileFriction () {
            return this.mobileFriction;
        }

        
        public boolean isMobileFrictionPresent () {
            return this.mobileFriction != null;
        }
        

        public void setMobileFriction (Percentage value) {
            this.mobileFriction = value;
        }
        
  
        
        public SurfaceStatus getSurfaceStatus () {
            return this.surfaceStatus;
        }

        
        public boolean isSurfaceStatusPresent () {
            return this.surfaceStatus != null;
        }
        

        public void setSurfaceStatus (SurfaceStatus value) {
            this.surfaceStatus = value;
        }
        
  
        
        public AmbientAirTemperature getSurfaceTemperature () {
            return this.surfaceTemperature;
        }

        
        public boolean isSurfaceTemperaturePresent () {
            return this.surfaceTemperature != null;
        }
        

        public void setSurfaceTemperature (AmbientAirTemperature value) {
            this.surfaceTemperature = value;
        }
        
  
        
        public AmbientAirTemperature getPavementTemperature () {
            return this.pavementTemperature;
        }

        
        public boolean isPavementTemperaturePresent () {
            return this.pavementTemperature != null;
        }
        

        public void setPavementTemperature (AmbientAirTemperature value) {
            this.pavementTemperature = value;
        }
        
  
        
        public Speed getWindSenAvSpeed () {
            return this.windSenAvSpeed;
        }

        
        public boolean isWindSenAvSpeedPresent () {
            return this.windSenAvSpeed != null;
        }
        

        public void setWindSenAvSpeed (Speed value) {
            this.windSenAvSpeed = value;
        }
        
  
        
        public Heading getWindSenAvDirection () {
            return this.windSenAvDirection;
        }

        
        public boolean isWindSenAvDirectionPresent () {
            return this.windSenAvDirection != null;
        }
        

        public void setWindSenAvDirection (Heading value) {
            this.windSenAvDirection = value;
        }
        
  
        
        public AmbientAirTemperature getSurfaceFreezePoint () {
            return this.surfaceFreezePoint;
        }

        
        public boolean isSurfaceFreezePointPresent () {
            return this.surfaceFreezePoint != null;
        }
        

        public void setSurfaceFreezePoint (AmbientAirTemperature value) {
            this.surfaceFreezePoint = value;
        }
        
  
        
        public SurfaceBlackIceSignal getSurfaceBlackIceSignal () {
            return this.surfaceBlackIceSignal;
        }

        
        public boolean isSurfaceBlackIceSignalPresent () {
            return this.surfaceBlackIceSignal != null;
        }
        

        public void setSurfaceBlackIceSignal (SurfaceBlackIceSignal value) {
            this.surfaceBlackIceSignal = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PodeWeatherData.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            