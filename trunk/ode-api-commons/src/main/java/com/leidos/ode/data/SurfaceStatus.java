
package com.leidos.ode.data;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "SurfaceStatus"
    )
    public class SurfaceStatus implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "other", hasTag = true , tag = 1 )
            other , 
            @ASN1EnumItem ( name = "error", hasTag = true , tag = 2 )
            error , 
            @ASN1EnumItem ( name = "dry", hasTag = true , tag = 3 )
            dry , 
            @ASN1EnumItem ( name = "traceMoisture", hasTag = true , tag = 4 )
            traceMoisture , 
            @ASN1EnumItem ( name = "wet", hasTag = true , tag = 5 )
            wet , 
            @ASN1EnumItem ( name = "chemicallyWet", hasTag = true , tag = 6 )
            chemicallyWet , 
            @ASN1EnumItem ( name = "iceWarning", hasTag = true , tag = 7 )
            iceWarning , 
            @ASN1EnumItem ( name = "iceWatch", hasTag = true , tag = 8 )
            iceWatch , 
            @ASN1EnumItem ( name = "snowWarning", hasTag = true , tag = 9 )
            snowWarning , 
            @ASN1EnumItem ( name = "snowWatch", hasTag = true , tag = 10 )
            snowWatch , 
            @ASN1EnumItem ( name = "absorption", hasTag = true , tag = 11 )
            absorption , 
            @ASN1EnumItem ( name = "dew", hasTag = true , tag = 12 )
            dew , 
            @ASN1EnumItem ( name = "frost", hasTag = true , tag = 13 )
            frost , 
            @ASN1EnumItem ( name = "absorptionAtDewpoint", hasTag = true , tag = 14 )
            absorptionAtDewpoint , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SurfaceStatus.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            